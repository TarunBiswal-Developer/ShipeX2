@model ShipeX2.Application.DTOs.ModelUser

@{
    ViewData ["Title"] = "Edit User";
}

@section css { }

<div class="pagetitle">
    <h1>Manage User</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"> <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item active">Edit User</li>
        </ol>
    </nav>
</div>

<section class="section inner-center-sec">
    <div class="row">
        <form id="editUserForm" method="post" class="row" data-parsley-validate>
            <!-- Left Side -->
            <div class="col-lg-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">User Details</h5>
                        <input type="hidden" id="Id" name="Id" value="@Model.Id">

                        <div class="mb-3">
                            <label for="RoleId">Role</label>
                            <select id="RoleId" name="RoleId" class="form-select"
                                    required data-parsley-error-message="User role is required"
                                    data-parsley-errors-container="#role-error-container">
                                @foreach (var role in ViewBag.Roles)
                                {
                                    <option value="@role.Value" selected="@(Model.RoleId.ToString() ==  role.Value.ToString() ? "selected" : null)">@role.Text</option>
                                }
                            </select>
                            <div id="role-error-container"></div>
                        </div>

                        <div class="mb-3">
                            <label for="UserId">User ID</label>
                            <input id="UserId" name="UserId" type="text" class="form-control"
                                   required data-parsley-error-message="User Id is required"
                                   value="@Model.UserId" />
                        </div>

                        <div class="mb-3">
                            <label for="Password">Password</label>
                            <input id="Password" name="Password" type="password" class="form-control"
                                   required data-parsley-error-message="Password is required"
                                   value="@Model.Password" />
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Side -->
            <div class="col-lg-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Ship Station</h5>

                        <div class="mb-3">
                            <label for="LabelPntId">Label Printer</label>
                            <select id="LabelPntId" name="LabelPntId" class="form-select"
                                    required data-parsley-error-message="Label Printer is required"
                                    data-parsley-errors-container="#label-error-container">
                                @foreach (var labelPrinter in ViewBag.LabelPrinters)
                                {
                                    <option value="@labelPrinter.Value" selected="@(Model.LabelPntId.ToString() == labelPrinter.Value.ToString() ? "selected" : null)">@labelPrinter.Text</option>
                                }
                            </select>
                            <div id="label-error-container"></div>
                        </div>

                        <div class="mb-3">
                            <label for="InvoicePntId">Invoice Printer</label>
                            <select id="InvoicePntId" name="InvoicePntId" class="form-select"
                                    required data-parsley-error-message="Invoice Printer is required"
                                    data-parsley-errors-container="#invoice-error-container">
                                @foreach (var invoicePrinter in ViewBag.InvoicePrinters)
                                {
                                    <option value="@invoicePrinter.Value" selected="@(Model.InvoicePntId.ToString() == invoicePrinter.Value.ToString() ? "selected" : null)">@invoicePrinter.Text</option>
                                }
                            </select>
                            <div id="invoice-error-container"></div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Submit -->
            <div class="col-lg-12 mt-3">
                <div class="text-center">
                    <button type="submit" class="btn btn-primary custom-btn">Update</button>
                    <a asp-action="UserList" class="btn btn-secondary">Back to List</a>
                </div>
            </div>
        </form>
    </div>
</section>

@section scripts {
    <script>
        $(document).ready(function () {
            $("#editUserForm").submit(function (event) {
                event.preventDefault();

                var formData = {
                    Id: $("#Id").val(),
                    RoleId: $("#RoleId").val(),
                    UserId: $("#UserId").val(),
                    Password: $("#Password").val(),
                    LabelPntId: $("#LabelPntId").val(),
                    InvoicePntId: $("#InvoicePntId").val()
                };

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("EditUserDetails", "User")',
                    contentType: "application/json",
                    data: JSON.stringify(formData),
                    success: function (response) {
                        if (response.IsSuccessful) {
                            toastr.success(response.Message);
                            setTimeout(function () {
                                window.location.href = "/User/UserList";
                            }, 3000);
                        } else {
                            toastr.error(response.Message);
                        }
                    },
                    error: function () {
                        toastr.error("Something went wrong!");
                    }
                });
            });
        });
    </script>
}
